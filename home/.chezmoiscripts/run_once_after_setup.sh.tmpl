#!/usr/bin/env bash

{{ template "common" . -}}
{{ template "task_manager" . -}}
{{ template "task_modules" . -}}

# Initialize modules
package_module
asdf_module
shell_module
devtools_module
docker_module

# Setup intro
setup_intro() {
  bot "Welcome to the dotfiles setup script"
  echo "This script will set up your development environment"
  echo "It will not install anything without your direct agreement"
  return 0
}

# Homebrew installation
setup_homebrew() {
  if [[ "$OSTYPE" != "darwin"* ]]; then
    ok "Skipping Homebrew installation (not on macOS)"
    return 0
  fi
  
  if ! _exists brew; then
    action "Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || return 1
  else
    ok "Homebrew already installed"
  fi
  return 0
}

# Install system packages
install_system_packages() {
  local os_type
  if [[ "$OSTYPE" == "darwin"* ]]; then
    os_type="darwin"
  elif [[ -f /etc/debian_version ]]; then
    os_type="debian"
  else
    os_type="unknown"
  fi
  
  # Install common packages
  install_packages "{{ join .packages.common " " }}" "common"
  
  # Install OS-specific packages
  if [[ "$os_type" == "darwin" ]]; then
    install_packages "{{ join .packages.darwin " " }}" "macOS"
  elif [[ "$os_type" == "debian" ]]; then
    install_packages "{{ join .packages.debian " " }}" "Debian"
  fi
  
  return 0
}

# Tmux configuration
setup_tmux() {
  if ! _exists tmux; then
    error "Tmux not installed"
    return 1
  fi
  
  local tmux_conf_repo="https://github.com/gpakosz/.tmux.git"
  local tmux_conf_dir="$HOME/.tmux"
  
  if [[ ! -d "$tmux_conf_dir" ]]; then
    action "Cloning tmux configuration"
    git clone "$tmux_conf_repo" "$tmux_conf_dir" || return 1
    ln -sf "$tmux_conf_dir/.tmux.conf" "$HOME/.tmux.conf"
  else
    action "Updating tmux configuration"
    git -C "$tmux_conf_dir" pull || return 1
  fi
  
  ok "Tmux configured"
  return 0
}

# Finish setup
finish_setup() {
  bot "Setup completed!"
  echo "Your development environment is now ready"
  
  if [[ "$OSTYPE" != "darwin"* ]]; then
    warn "You may need to log out and back in for some changes to take effect"
  fi
  
  return 0
}

# Register all tasks with their dependencies
# Format: register_task "task_id" "description" "dependency1,dependency2" function_name
register_task "intro" "Introduction" "none" setup_intro
register_task "homebrew" "Install Homebrew (macOS)" "intro" setup_homebrew
register_task "packages" "Install system packages" "homebrew" install_system_packages
register_task "fish" "Configure Fish shell" "packages" setup_fish
register_task "tmux" "Setup Tmux configuration" "packages" setup_tmux
register_task "asdf" "Install ASDF version manager" "packages" install_asdf
register_task "tools" "Install tools from .tool-versions" "asdf" install_asdf_tools
register_task "docker" "Configure Docker" "packages" setup_docker
register_task "ssh" "Setup SSH keys" "intro" setup_ssh_keys
register_task "git" "Configure Git" "packages" setup_git
register_task "vscode" "Setup VSCode and extensions" "packages" setup_vscode
register_task "starship" "Configure Starship prompt" "packages" setup_starship
register_task "fonts" "Setup fonts" "packages" setup_fonts
register_task "finish" "Finish setup" "fish,tmux,tools,docker,ssh,git,vscode,starship,fonts" finish_setup

# Execute all tasks
execute_tasks